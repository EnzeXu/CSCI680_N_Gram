public class MyInputStream extends InputStream { private int cursor; private int mark; public MyInputStream() { cursor = 0; mark = 0; } @Override public int read() throws IOException { if (cursor >= size) { return -1; } int result = getUnsignedByte0(cursor); cursor++; return result; } @Override public int read(byte[] arr, int offset, int length) { if ((offset + length) > arr.length) { length = arr.length - offset; } int maxLength = size - cursor; if (length > maxLength) { length = maxLength; } System.arraycopy(bytes, cursor + start, arr, offset, length); cursor += length; return length; } @Override public int available() { return size - cursor; } @Override public void mark(int reserve) { mark = cursor; } @Override public void reset() { cursor = mark; } @Override public boolean markSupported() { return true; } }