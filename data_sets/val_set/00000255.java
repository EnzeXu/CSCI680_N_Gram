public class RClosest { public RPoint[] intersects; public RPoint[] closest; public float distance = 10000; public float[] advancements; public RClosest() {} public void update(RClosest other) { if (other.intersects == null) { if (other.distance > this.distance) return; this.distance = other.distance; this.closest = other.closest; this.advancements = other.advancements; } else { this.closest = null; this.advancements = null; this.distance = 0; RPoint[] newIntersects = null; if(this.intersects==null){ this.intersects = new RPoint[other.intersects.length]; System.arraycopy(other.intersects, 0, this.intersects, 0, other.intersects.length); }else{ newIntersects = new RPoint[this.intersects.length + other.intersects.length]; System.arraycopy(this.intersects, 0, newIntersects, 0, this.intersects.length); System.arraycopy(other.intersects, 0, newIntersects, this.intersects.length, other.intersects.length); this.intersects = newIntersects; } } } }