public class AggregateByProps extends Props { public static String AGGREGATE_BY_CACHE_FACTORY = "cascading.aggregateby.cachefactory.classname"; public static final String AGGREGATE_BY_CAPACITY = "cascading.aggregateby.cache.capacity"; public static int AGGREGATE_BY_DEFAULT_CAPACITY = BaseCacheFactory.DEFAULT_CAPACITY; public static final Class<? extends BaseCacheFactory> DEFAULT_CACHE_FACTORY_CLASS = LRUHashMapCacheFactory.class; private Properties properties; public static AggregateByProps aggregateByProps() { return new AggregateByProps(); } public AggregateByProps() { this.properties = new Properties(); } public AggregateByProps setCacheFactoryClass( Class<? extends BaseCacheFactory> cacheFactory ) { return setCacheFactoryClassName( cacheFactory.getName() ); } public AggregateByProps setCacheFactoryClassName( String cacheFactoryClassName ) { properties.setProperty( AGGREGATE_BY_CACHE_FACTORY, cacheFactoryClassName ); return this; } public AggregateByProps setCapacity( int capacity ) { properties.setProperty( AGGREGATE_BY_CAPACITY, String.valueOf( capacity ) ); return this; } public int getCapacity() { String capacityValue = properties.getProperty( AGGREGATE_BY_CAPACITY ); if( capacityValue == null ) return BaseCacheFactory.DEFAULT_CAPACITY; return Integer.valueOf( capacityValue ); } public String getCacheFactoryClassName() { String className = properties.getProperty( AGGREGATE_BY_CACHE_FACTORY ); if( className == null ) return DEFAULT_CACHE_FACTORY_CLASS.getName(); return className; } @Override protected void addPropertiesTo( Properties properties ) { properties.putAll( this.properties ); } }