public class ServiceLoader extends ProviderLoader<CascadingService> { private static ServiceLoader serviceLoader; private Map<String, CascadingService> singletons = new HashMap<String, CascadingService>(); public synchronized static ServiceLoader getInstance( URL libraryURL, String[] exclusions ) { if( serviceLoader == null ) serviceLoader = new ServiceLoader( libraryURL, exclusions ); return serviceLoader; } public synchronized static void releaseSingletonsAndDestroy() { if( serviceLoader != null ) serviceLoader.releaseSingletonServices(); serviceLoader = null; } ServiceLoader( URL libraryURL, String[] exclusions ) { super( exclusions, libraryURL ); } public synchronized CascadingService loadSingletonServiceFrom( Properties defaultProperties, Map<Object, Object> properties, String property ) { String className = getStringProperty( defaultProperties, properties, property ); if( !singletons.containsKey( className ) ) singletons.put( className, loadServiceFrom( defaultProperties, properties, property ) ); return singletons.get( className ); } public synchronized Collection<CascadingService> releaseSingletonServices() { try { return Collections.unmodifiableCollection( singletons.values() ); } finally { singletons.clear(); } } public CascadingService loadServiceFrom( Properties defaultProperties, Map<Object, Object> properties, String property ) { String className = getStringProperty( defaultProperties, properties, property ); CascadingService service = createProvider( className ); if( service != null ) service.setProperties( properties ); return service; } }