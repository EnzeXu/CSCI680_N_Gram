public class CombineFileRecordReaderWrapper<K, V> implements RecordReader<K, V> { public static final String INDIVIDUAL_INPUT_FORMAT = "cascading.individual.input.format"; private final RecordReader<K, V> delegate; public CombineFileRecordReaderWrapper( CombineFileSplit split, Configuration conf, Reporter reporter, Integer idx ) throws Exception { FileSplit fileSplit = new FileSplit( split.getPath( idx ), split.getOffset( idx ), split.getLength( idx ), split.getLocations() ); Class<?> clz = conf.getClass( INDIVIDUAL_INPUT_FORMAT, null ); FileInputFormat<K, V> inputFormat = (FileInputFormat<K, V>) clz.newInstance(); if( inputFormat instanceof Configurable ) ( (Configurable) inputFormat ).setConf( conf ); delegate = inputFormat.getRecordReader( fileSplit, (JobConf) conf, reporter ); } public boolean next( K key, V value ) throws IOException { return delegate.next( key, value ); } public K createKey() { return delegate.createKey(); } public V createValue() { return delegate.createValue(); } public long getPos() throws IOException { return delegate.getPos(); } public void close() throws IOException { delegate.close(); } public float getProgress() throws IOException { return delegate.getProgress(); } }