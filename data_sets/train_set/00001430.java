public class TupleEntrySchemeIteratorProps extends Props { public static final String PERMITTED_EXCEPTIONS = "cascading.tuple.tupleentryiterator.exceptions.permit"; private Class<? extends Exception>[] permittedExceptions = null; public static void setPermittedExceptions( Map<Object, Object> properties, Class<? extends Exception>... exceptions ) { if( exceptions != null ) { List<String> classNames = new ArrayList<String>(); for( Class<? extends Exception> clazz : exceptions ) classNames.add( clazz.getName() ); properties.put( PERMITTED_EXCEPTIONS, Util.join( classNames, "," ) ); } } public static TupleEntrySchemeIteratorProps tupleEntrySchemeIteratorProps() { return new TupleEntrySchemeIteratorProps(); } public TupleEntrySchemeIteratorProps() { } public Class<? extends Exception>[] getPermittedExceptions() { return permittedExceptions; } public TupleEntrySchemeIteratorProps setPermittedExceptions( Class<? extends Exception>[] permittedExceptions ) { this.permittedExceptions = permittedExceptions; return this; } @Override protected void addPropertiesTo( Properties properties ) { setPermittedExceptions( properties, permittedExceptions ); } }