public class MemcachedConnectionTest extends TestCase { public void testDebugBuffer() throws Exception { String input = "this is a test _"; ByteBuffer bb = ByteBuffer.wrap(input.getBytes()); String s = MemcachedConnection.dbgBuffer(bb, input.length()); assertEquals("this is a test \\x5f", s); } public void testConnectionsStatus() throws Exception { ConnectionFactory factory = new DefaultConnectionFactory(); List<InetSocketAddress> addresses = AddrUtil.getAddresses(TestConfig.IPV4_ADDR + ":11211"); Collection<ConnectionObserver> observers = new ArrayList<ConnectionObserver>(); MemcachedConnection mcc = new MemcachedConnection(10240, factory, addresses, observers, FailureMode.Retry, new BinaryOperationFactory()); assertNotNull(mcc.connectionsStatus()); } public void testBelongsToCluster() throws Exception { ConnectionFactory factory = new DefaultConnectionFactory(); Collection<ConnectionObserver> observers = new ArrayList<ConnectionObserver>(); OperationFactory opfactory = new BinaryOperationFactory(); MemcachedNode node = new MockMemcachedNode( new InetSocketAddress(TestConfig.IPV4_ADDR, TestConfig.PORT_NUMBER)); MemcachedNode node2 = new MockMemcachedNode( new InetSocketAddress("invalidIpAddr", TestConfig.PORT_NUMBER)); List<InetSocketAddress> nodes = new ArrayList<InetSocketAddress>(); nodes.add((InetSocketAddress)node.getSocketAddress()); MemcachedConnection conn = new MemcachedConnection( 100, factory, nodes, observers, FailureMode.Retry, opfactory); assertTrue(conn.belongsToCluster(node)); assertFalse(conn.belongsToCluster(node2)); } }