public class MergeStage extends ElementStage < TupleEntry , TupleEntry > implements Collapsing { private boolean started = false ; protected final AtomicInteger completeCount = new AtomicInteger ( 0 ) ; private int numIncomingPaths ; public MergeStage ( FlowProcess flowProcess , FlowElement flowElement ) { super ( flowProcess , flowElement ) ; } @ Override public void bind ( StreamGraph streamGraph ) { super . bind ( streamGraph ) ; numIncomingPaths = streamGraph . findAllPreviousFor ( this ) . length ; } @ Override public void initialize ( ) { super . initialize ( ) ; completeCount . set ( numIncomingPaths ) ; } @ Override public synchronized void start ( Duct previous ) { if ( started ) return ; super . start ( previous ) ; started = true ; } @ Override public void complete ( Duct previous ) { if ( completeCount . decrementAndGet ( ) != 0 ) return ; super . complete ( previous ) ; completeCount . set ( numIncomingPaths ) ; } }