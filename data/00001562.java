public class AnnotatedDecoratedElementGraph extends DecoratedElementGraph implements AnnotatedGraph { private final EnumMultiMap<FlowElement> annotations; public AnnotatedDecoratedElementGraph( ElementGraph decorated, EnumMultiMap<FlowElement> annotations ) { super( decorated ); if( annotations == null ) throw new IllegalArgumentException( "annotations are required" ); this.annotations = annotations; } @Override public boolean hasAnnotations() { return annotations != null && !annotations.isEmpty(); } @Override public EnumMultiMap<FlowElement> getAnnotations() { return annotations; } @Override public int hashCode() { int result = super.hashCode(); result = 31 * result + ( annotations != null ? annotations.hashCode() : 0 ); return result; } }