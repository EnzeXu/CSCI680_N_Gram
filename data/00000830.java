public class App extends MultiDexApplication { private static Database db = null ; private static boolean shutdown = false ; private static Calendar calendar = null ; private static RecentFileHistory fileHistory = null ; private static final String TAG = "KeePassDroid Timer" ; private BroadcastReceiver mIntentReceiver ; public static Database getDB ( ) { if ( db == null ) { db = new Database ( ) ; } return db ; } public static RecentFileHistory getFileHistory ( ) { return fileHistory ; } public static void setDB ( Database d ) { db = d ; } public static boolean isShutdown ( ) { return shutdown ; } public static void setShutdown ( ) { shutdown = true ; } public static void clearShutdown ( ) { shutdown = false ; } public static Calendar getCalendar ( ) { if ( calendar == null ) { calendar = Calendar . getInstance ( ) ; } return calendar ; } @ Override public void onCreate ( ) { super . onCreate ( ) ; fileHistory = new RecentFileHistory ( this ) ; PRNGFixes . apply ( ) ; mIntentReceiver = new BroadcastReceiver ( ) { @ Override public void onReceive ( Context context , Intent intent ) { String action = intent . getAction ( ) ; if ( action . equals ( Intents . TIMEOUT ) ) { timeout ( context ) ; } } } ; IntentFilter filter = new IntentFilter ( ) ; filter . addAction ( Intents . TIMEOUT ) ; registerReceiver ( mIntentReceiver , filter ) ; } private void timeout ( Context context ) { Log . d ( TAG , "Timeout" ) ; App . setShutdown ( ) ; NotificationManager nm = ( NotificationManager ) getSystemService ( NOTIFICATION_SERVICE ) ; nm . cancelAll ( ) ; } @ Override public void onTerminate ( ) { if ( db != null ) { db . clear ( getApplicationContext ( ) ) ; } unregisterReceiver ( mIntentReceiver ) ; super . onTerminate ( ) ; } }