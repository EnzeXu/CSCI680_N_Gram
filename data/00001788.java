public class PartitionTap extends BasePartitionTap < Configuration , RecordReader , OutputCollector > { @ ConstructorProperties ( { "parent" , "partition" } ) public PartitionTap ( Hfs parent , Partition partition ) { this ( parent , partition , OPEN_WRITES_THRESHOLD_DEFAULT ) ; } @ ConstructorProperties ( { "parent" , "partition" , "openWritesThreshold" } ) public PartitionTap ( Hfs parent , Partition partition , int openWritesThreshold ) { super ( parent , partition , openWritesThreshold ) ; } @ ConstructorProperties ( { "parent" , "partition" , "sinkMode" } ) public PartitionTap ( Hfs parent , Partition partition , SinkMode sinkMode ) { super ( parent , partition , sinkMode ) ; } @ ConstructorProperties ( { "parent" , "partition" , "sinkMode" , "keepParentOnDelete" } ) public PartitionTap ( Hfs parent , Partition partition , SinkMode sinkMode , boolean keepParentOnDelete ) { this ( parent , partition , sinkMode , keepParentOnDelete , OPEN_WRITES_THRESHOLD_DEFAULT ) ; } @ ConstructorProperties ( { "parent" , "partition" , "sinkMode" , "keepParentOnDelete" , "openWritesThreshold" } ) public PartitionTap ( Hfs parent , Partition partition , SinkMode sinkMode , boolean keepParentOnDelete , int openWritesThreshold ) { super ( parent , partition , sinkMode , keepParentOnDelete , openWritesThreshold ) ; } @ Override protected TupleEntrySchemeCollector createTupleEntrySchemeCollector ( FlowProcess < ? extends Configuration > flowProcess , Tap parent , String path , long sequence ) throws IOException { TapOutputCollector outputCollector = new TapOutputCollector ( flowProcess , parent , path , sequence ) ; return new TupleEntrySchemeCollector < Configuration , OutputCollector > ( flowProcess , parent , outputCollector ) ; } @ Override protected TupleEntrySchemeIterator createTupleEntrySchemeIterator ( FlowProcess < ? extends Configuration > flowProcess , Tap parent , String path , RecordReader recordReader ) throws IOException { return new HadoopTupleEntrySchemeIterator ( flowProcess , new Hfs ( parent . getScheme ( ) , path ) , recordReader ) ; } @ Override protected String getCurrentIdentifier ( FlowProcess < ? extends Configuration > flowProcess ) { String identifier = flowProcess . getStringProperty ( FileType . CASCADING_SOURCE_PATH ) ; if ( identifier == null ) { if ( flowProcess . getBooleanProperty ( HfsProps . COMBINE_INPUT_FILES , false ) ) throw new TapException ( "combined input format support , via '" + HfsProps . COMBINE_INPUT_FILES + "' , may not be enabled for use with the PartitionTap" ) ; throw new TapException ( "unable to retrieve the current file being processed , '" + FileType . CASCADING_SOURCE_PATH + "' is not set" ) ; } return new Path ( identifier ) . getParent ( ) . toString ( ) ; } @ Override public void sourceConfInit ( FlowProcess < ? extends Configuration > flowProcess , Configuration conf ) { try { String [ ] childPartitions = getChildPartitionIdentifiers ( flowProcess , true ) ; ( ( Hfs ) getParent ( ) ) . applySourceConfInitIdentifiers ( flowProcess , conf , childPartitions ) ; } catch ( IOException exception ) { throw new TapException ( "unable to retrieve child partitions" , exception ) ; } } @ Override public TupleEntryIterator openForRead ( FlowProcess < ? extends Configuration > flowProcess , RecordReader input ) throws IOException { if ( flowProcess . getBooleanProperty ( HfsProps . COMBINE_INPUT_FILES , false ) ) return new CombinePartitionIterator ( flowProcess , input ) ; return super . openForRead ( flowProcess , input ) ; } private class CombinePartitionIterator extends TupleEntryIterableChainIterator { public CombinePartitionIterator ( final FlowProcess < ? extends Configuration > flowProcess , RecordReader input ) throws IOException { super ( getSourceFields ( ) ) ; List < Iterator < Tuple > > iterators = new ArrayList < Iterator < Tuple > > ( ) ; if ( input == null ) throw new IOException ( "input cannot be null" ) ; String identifier = parent . getFullIdentifier ( flowProcess ) ; iterators . add ( createPartitionEntryIterator ( flowProcess , input , identifier ) ) ; reset ( iterators ) ; } private CombineInputPartitionTupleEntryIterator createPartitionEntryIterator ( FlowProcess < ? extends Configuration > flowProcess , RecordReader input , String parentIdentifier ) throws IOException { TupleEntrySchemeIterator schemeIterator = createTupleEntrySchemeIterator ( flowProcess , parent , null , input ) ; return new CombineInputPartitionTupleEntryIterator ( flowProcess , getSourceFields ( ) , partition , parentIdentifier , schemeIterator ) ; } } @ Override public boolean commitResource ( Configuration conf ) throws IOException { Hadoop18TapUtil . writeSuccessMarker ( conf , ( ( Hfs ) parent ) . getPath ( ) ) ; return super . commitResource ( conf ) ; } }