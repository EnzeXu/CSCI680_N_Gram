public class KeyIndexTupleDeserializer extends IndexTupleDeserializer < KeyIndexTuple > { public KeyIndexTupleDeserializer ( TupleSerialization . SerializationElementReader elementReader ) { super ( elementReader ) ; typeMap = elementReader . getTupleSerialization ( ) . getKeyTypeMap ( ) ; if ( elementReader . getTupleSerialization ( ) . areTypesRequired ( ) ) { if ( typeMap == null || typeMap . isEmpty ( ) ) throw new IllegalStateException ( "types are required to perform serialization , fields : " + elementReader . getTupleSerialization ( ) . getKeyFieldsMap ( ) ) ; } } @ Override protected KeyIndexTuple createTuple ( ) { return new KeyIndexTuple ( ) ; } @ Override protected Class [ ] getTypesFor ( int ordinal ) { return typeMap . get ( ordinal ) ; } }