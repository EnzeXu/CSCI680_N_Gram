public class UpdateEntry extends RunnableOnFinish { private Database mDb; private PwEntry mOldE; private PwEntry mNewE; private Context ctx; public UpdateEntry(Context ctx, Database db, PwEntry oldE, PwEntry newE, OnFinish finish) { super(finish); mDb = db; mOldE = oldE; mNewE = newE; this.ctx = ctx; PwEntry backup; backup = (PwEntry) mOldE.clone(); mFinish = new AfterUpdate(backup, finish); } @Override public void run() { mOldE.assign(mNewE); mOldE.touch(true, true); SaveDB save = new SaveDB(ctx, mDb, mFinish); save.run(); } private class AfterUpdate extends OnFinish { private PwEntry mBackup; public AfterUpdate(PwEntry backup, OnFinish finish) { super(finish); mBackup = backup; } @Override public void run() { if ( mSuccess ) { if ( ! mBackup.getTitle().equals(mNewE.getTitle()) || ! mBackup.getIcon().equals(mNewE.getIcon()) ) { PwGroup parent = mBackup.getParent(); if ( parent != null ) { parent.sortEntriesByName(); mDb.dirty.add(parent); } } } else { mOldE.assign(mBackup); } super.run(); } } }