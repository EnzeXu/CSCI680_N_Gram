public class CountingCollectStage < Incoming , Outgoing > extends Stage < Incoming , Outgoing > implements Reducing < Grouping , Outgoing > { int prepareCount = 0 ; int startCount = 0 ; int startGroupCount = 0 ; int receiveCount = 0 ; int completeGroupCount = 0 ; int completeCount = 0 ; int cleanupCount = 0 ; public CountingCollectStage ( ) { } public int getPrepareCount ( ) { return prepareCount ; } public int getStartCount ( ) { return startCount ; } public int getReceiveCount ( ) { return receiveCount ; } public int getCompleteCount ( ) { return completeCount ; } public int getCleanupCount ( ) { return cleanupCount ; } @ Override public void prepare ( ) { prepareCount++ ; super . prepare ( ) ; } @ Override public void start ( Duct previous ) { startCount++ ; super . start ( previous ) ; } @ Override public void startGroup ( Duct previous , Grouping grouping ) { startGroupCount++ ; ( ( Reducing ) next ) . startGroup ( this , grouping ) ; } @ Override public void receive ( Duct previous , int ordinal , Incoming incoming ) { receiveCount++ ; super . receive ( previous , ordinal , incoming ) ; } @ Override public void completeGroup ( Duct previous , Outgoing outgoing ) { completeGroupCount++ ; ( ( Reducing ) next ) . completeGroup ( this , outgoing ) ; } @ Override public void complete ( Duct previous ) { completeCount++ ; super . complete ( previous ) ; } @ Override public void cleanup ( ) { cleanupCount++ ; super . cleanup ( ) ; } }