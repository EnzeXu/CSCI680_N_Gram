public class SetPasswordDialog extends CancelDialog { private byte [ ] masterKey ; private Uri mKeyfile ; private FileOnFinish mFinish ; public SetPasswordDialog ( Activity act ) { super ( act ) ; setOwnerActivity ( act ) ; } public SetPasswordDialog ( Activity act , FileOnFinish finish ) { this ( act ) ; mFinish = finish ; } public byte [ ] getKey ( ) { return masterKey ; } public Uri keyfile ( ) { return mKeyfile ; } @ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . set_password ) ; setTitle ( R . string . password_title ) ; Button okButton = ( Button ) findViewById ( R . id . ok ) ; okButton . setOnClickListener ( new View . OnClickListener ( ) { public void onClick ( View v ) { TextView passView = ( TextView ) findViewById ( R . id . pass_password ) ; String pass = passView . getText ( ) . toString ( ) ; TextView passConfView = ( TextView ) findViewById ( R . id . pass_conf_password ) ; String confpass = passConfView . getText ( ) . toString ( ) ; if ( ! pass . equals ( confpass ) ) { Toast . makeText ( getContext ( ) , R . string . error_pass_match , Toast . LENGTH_LONG ) . show ( ) ; return ; } TextView keyfileView = ( TextView ) findViewById ( R . id . pass_keyfile ) ; Uri keyfile = UriUtil . parseDefaultFile ( keyfileView . getText ( ) . toString ( ) ) ; mKeyfile = keyfile ; if ( pass . length ( ) == 0 && EmptyUtils . isNullOrEmpty ( keyfile ) ) { Toast . makeText ( getContext ( ) , R . string . error_nopass , Toast . LENGTH_LONG ) . show ( ) ; return ; } SetPassword sp = new SetPassword ( getContext ( ) , App . getDB ( ) , pass , keyfile , new AfterSave ( mFinish , new Handler ( ) ) ) ; Activity act = getOwnerActivity ( ) ; final ProgressTask pt = new ProgressTask ( act , sp , R . string . saving_database ) ; boolean valid = sp . validatePassword ( getContext ( ) , new OnClickListener ( ) { @ Override public void onClick ( DialogInterface dialog , int which ) { pt . run ( ) ; } } ) ; if ( valid ) { pt . run ( ) ; } } } ) ; Button cancel = ( Button ) findViewById ( R . id . cancel ) ; cancel . setOnClickListener ( new View . OnClickListener ( ) { public void onClick ( View v ) { cancel ( ) ; if ( mFinish != null ) { mFinish . run ( ) ; } } } ) ; } private class AfterSave extends OnFinish { private FileOnFinish mFinish ; public AfterSave ( FileOnFinish finish , Handler handler ) { super ( finish , handler ) ; mFinish = finish ; } @ Override public void run ( ) { if ( mSuccess ) { if ( mFinish != null ) { mFinish . setFilename ( mKeyfile ) ; } dismiss ( ) ; } else { displayMessage ( ( AppCompatActivity ) getOwnerActivity ( ) ) ; } super . run ( ) ; } } }