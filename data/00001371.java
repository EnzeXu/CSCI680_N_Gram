public class ElementMaskSubGraph extends BaseElementGraph implements ElementGraph { private ElementGraph elementGraph ; private VertexMask vertexMask ; private EdgeMask edgeMask ; private static class VertexMask implements Predicate < FlowElement > { Set < FlowElement > maskedElements = createIdentitySet ( ) ; public VertexMask ( Collection < FlowElement > flowElements ) { if ( flowElements != null ) maskedElements . addAll ( flowElements ) ; } @ Override public boolean test ( FlowElement flowElement ) { return maskedElements . contains ( flowElement ) ; } } private static class EdgeMask implements Predicate < Scope > { Set < Scope > maskedScopes = new HashSet < > ( ) ; public EdgeMask ( Collection < Scope > scopes ) { if ( scopes != null ) maskedScopes . addAll ( scopes ) ; } @ Override public boolean test ( Scope scope ) { return maskedScopes . contains ( scope ) ; } } public ElementMaskSubGraph ( ElementGraph elementGraph , FlowElement . . . maskedFlowElements ) { this ( elementGraph , new VertexMask ( Arrays . asList ( maskedFlowElements ) ) , new EdgeMask ( null ) ) ; } public ElementMaskSubGraph ( ElementGraph elementGraph , Collection < FlowElement > maskedFlowElements ) { this ( elementGraph , new VertexMask ( maskedFlowElements ) , new EdgeMask ( null ) ) ; } public ElementMaskSubGraph ( ElementGraph elementGraph , Collection < FlowElement > maskedFlowElements , Collection < Scope > maskedScopes ) { this ( elementGraph , new VertexMask ( maskedFlowElements ) , new EdgeMask ( maskedScopes ) ) ; } public ElementMaskSubGraph ( ElementMaskSubGraph graph ) { this ( graph . elementGraph , graph . vertexMask , graph . edgeMask ) ; } protected ElementMaskSubGraph ( ElementGraph elementGraph , VertexMask vertexMask , EdgeMask edgeMask ) { this . graph = new DirectedMaskSubGraph ( directed ( elementGraph ) , vertexMask , edgeMask ) ; this . elementGraph = elementGraph ; this . vertexMask = vertexMask ; this . edgeMask = edgeMask ; } @ Override public ElementGraph copyElementGraph ( ) { return new ElementMaskSubGraph ( ElementMaskSubGraph . this ) ; } private class DirectedMaskSubGraph extends MaskSubgraph < FlowElement , Scope > { public DirectedMaskSubGraph ( Graph < FlowElement , Scope > base , VertexMask vertexMask , EdgeMask edgeMask ) { super ( base , vertexMask , edgeMask ) ; } } }