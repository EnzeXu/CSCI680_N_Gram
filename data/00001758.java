public class SequenceFile extends Scheme < Configuration , RecordReader , OutputCollector , Object [ ] , Void > implements FileFormat { protected SequenceFile ( ) { super ( null ) ; } @ ConstructorProperties ( { "fields" } ) public SequenceFile ( Fields fields ) { super ( fields , fields ) ; } @ Override public void sourceConfInit ( FlowProcess < ? extends Configuration > flowProcess , Tap < Configuration , RecordReader , OutputCollector > tap , Configuration conf ) { conf . setBoolean ( "mapred . mapper . new-api" , false ) ; conf . setClass ( "mapred . input . format . class" , SequenceFileInputFormat . class , InputFormat . class ) ; } @ Override public void sinkConfInit ( FlowProcess < ? extends Configuration > flowProcess , Tap < Configuration , RecordReader , OutputCollector > tap , Configuration conf ) { conf . setBoolean ( "mapred . mapper . new-api" , false ) ; conf . setClass ( "mapred . output . key . class" , Tuple . class , Object . class ) ; conf . setClass ( "mapred . output . value . class" , Tuple . class , Object . class ) ; conf . setClass ( "mapred . output . format . class" , SequenceFileOutputFormat . class , OutputFormat . class ) ; } @ Override public void sourcePrepare ( FlowProcess < ? extends Configuration > flowProcess , SourceCall < Object [ ] , RecordReader > sourceCall ) { Object [ ] pair = new Object [ ] { sourceCall . getInput ( ) . createKey ( ) , sourceCall . getInput ( ) . createValue ( ) } ; sourceCall . setContext ( pair ) ; } @ Override public boolean source ( FlowProcess < ? extends Configuration > flowProcess , SourceCall < Object [ ] , RecordReader > sourceCall ) throws IOException { Tuple key = ( Tuple ) sourceCall . getContext ( ) [ 0 ] ; Tuple value = ( Tuple ) sourceCall . getContext ( ) [ 1 ] ; boolean result = sourceCall . getInput ( ) . next ( key , value ) ; if ( !result ) return false ; TupleEntry entry = sourceCall . getIncomingEntry ( ) ; if ( entry . hasTypes ( ) ) entry . setCanonicalTuple ( value ) ; else entry . setTuple ( value ) ; return true ; } @ Override public void sourceCleanup ( FlowProcess < ? extends Configuration > flowProcess , SourceCall < Object [ ] , RecordReader > sourceCall ) { sourceCall . setContext ( null ) ; } @ Override public void sink ( FlowProcess < ? extends Configuration > flowProcess , SinkCall < Void , OutputCollector > sinkCall ) throws IOException { sinkCall . getOutput ( ) . collect ( Tuple . NULL , sinkCall . getOutgoingEntry ( ) . getTuple ( ) ) ; } @ Override public String getExtension ( ) { return "seq" ; } }