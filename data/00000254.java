public class RStrip { public int type = RGeomElem.TRISTRIP; public RPoint vertices[]; public RStrip(RStrip s){ for(int i=0;i<s.countVertices();i++){ this.append(new RPoint(s.vertices[i])); } } public RStrip(){ vertices=null; } public int countVertices(){ if(this.vertices==null){ return 0; } return this.vertices.length; } public void draw(PGraphics g){ int numVertices = countVertices(); g.beginShape(PConstants.TRIANGLE_STRIP); for(int i=0;i<numVertices;i++){ g.vertex(vertices[i].x,vertices[i].y); } g.endShape(); } public void addVertex(RPoint p){ this.append(p); } public void addVertex(float x, float y){ this.append(new RPoint(x,y)); } public RContour getBounds(){ float xmin = Float.MAX_VALUE ; float ymin = Float.MAX_VALUE ; float xmax = -Float.MAX_VALUE ; float ymax = -Float.MAX_VALUE ; for( int i = 0 ; i < this.countVertices() ; i++ ) { float x = this.vertices[i].x; float y = this.vertices[i].y; if( x < xmin ) xmin = x; if( x > xmax ) xmax = x; if( y < ymin ) ymin = y; if( y > ymax ) ymax = y; } RContour c = new RContour(); c.addPoint(xmin,ymin); c.addPoint(xmin,ymax); c.addPoint(xmax,ymax); c.addPoint(xmax,ymin); return c; } public RPoint[] getHandles(){ return vertices; } public RPoint[] getPoints(){ return vertices; } public void transform(RMatrix m){ int numVertices = countVertices(); if(numVertices!=0){ for(int i=0;i<numVertices;i++){ vertices[i].transform(m); } } } void add(RPoint p){ this.append(p); } void add(float x, float y){ this.append(new RPoint(x,y)); } void clear(){ this.vertices = null; } void append(RPoint nextvertex) { RPoint[] newvertices; if(vertices==null){ newvertices = new RPoint[1]; newvertices[0] = nextvertex; }else{ newvertices = new RPoint[this.vertices.length+1]; System.arraycopy(this.vertices,0,newvertices,0,this.vertices.length); newvertices[this.vertices.length]=nextvertex; } this.vertices=newvertices; } }