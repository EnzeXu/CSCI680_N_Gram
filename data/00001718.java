public class TestTextComparator implements StreamComparator<BufferedInputStream>, Comparator<TestText>, Serializable { @Override public int compare( TestText lhs, TestText rhs ) { if( lhs == rhs ) return 0; if( lhs == null ) return -1; if( rhs == null ) return 1; if( lhs.value == null && rhs.value == null ) return 0; if( lhs.value == null ) return -1; if( rhs.value == null ) return 1; return lhs.value.compareTo( rhs.value ); } @Override public int compare( BufferedInputStream lhsStream, BufferedInputStream rhsStream ) { try { if( lhsStream == null && rhsStream == null ) return 0; if( lhsStream == null ) { WritableUtils.readString( new DataInputStream( rhsStream ) ); return -1; } if( rhsStream == null ) { WritableUtils.readString( new DataInputStream( lhsStream ) ); return 1; } String lhsString = WritableUtils.readString( new DataInputStream( lhsStream ) ); String rhsString = WritableUtils.readString( new DataInputStream( rhsStream ) ); if( lhsString == null && rhsString == null ) return 0; if( lhsString == null ) return -1; if( rhsString == null ) return 1; return lhsString.compareTo( rhsString ); } catch( IOException exception ) { throw new CascadingException( exception ); } } }