public class TestSerialization extends Configured implements Comparison < TestText > , Serialization < TestText > { public static class TestTextDeserializer implements Deserializer < TestText > { private DataInputStream in ; @ Override public void open ( InputStream in ) throws IOException { if ( in instanceof DataInputStream ) this . in = ( DataInputStream ) in ; else this . in = new DataInputStream ( in ) ; } @ Override public TestText deserialize ( TestText testText ) throws IOException { return new TestText ( WritableUtils . readString ( in ) ) ; } @ Override public void close ( ) throws IOException { in . close ( ) ; } } public static class TestTextSerializer implements Serializer < TestText > { private DataOutputStream out ; @ Override public void open ( OutputStream out ) throws IOException { if ( out instanceof DataOutputStream ) this . out = ( DataOutputStream ) out ; else this . out = new DataOutputStream ( out ) ; } @ Override public void serialize ( TestText testText ) throws IOException { WritableUtils . writeString ( out , testText . value ) ; } @ Override public void close ( ) throws IOException { out . close ( ) ; } } public TestSerialization ( ) { } @ Override public boolean accept ( Class < ? > c ) { return TestText . class . isAssignableFrom ( c ) ; } @ Override public Serializer < TestText > getSerializer ( Class < TestText > c ) { return new TestTextSerializer ( ) ; } @ Override public Deserializer < TestText > getDeserializer ( Class < TestText > c ) { return new TestTextDeserializer ( ) ; } @ Override public Comparator < TestText > getComparator ( Class < TestText > type ) { return new TestTextComparator ( ) ; } }