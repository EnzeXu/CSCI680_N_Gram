public class AssertExpression extends ExpressionOperation implements ValueAssertion < ExpressionOperation . Context > { @ ConstructorProperties ( { "expression" , "parameterType" } ) public AssertExpression ( String expression , Class parameterType ) { super ( Fields . ALL , expression , parameterType ) ; } @ ConstructorProperties ( { "fieldDeclaration" , "expression" , "parameterNames" , "parameterTypes" } ) public AssertExpression ( Fields fieldDeclaration , String expression , String [ ] parameterNames , Class [ ] parameterTypes ) { super ( fieldDeclaration , expression , parameterNames , parameterTypes ) ; } @ Override public boolean supportsPlannerLevel ( PlannerLevel plannerLevel ) { return plannerLevel instanceof AssertionLevel ; } @ Override public void doAssert ( FlowProcess flowProcess , ValueAssertionCall < Context > assertionCall ) { TupleEntry input = assertionCall . getArguments ( ) ; if ( ! ( Boolean ) evaluate ( assertionCall . getContext ( ) , input ) ) BaseAssertion . throwFail ( "argument tuple : %s did not evaluate to true with expression : %s" , input . getTuple ( ) . print ( ) , block ) ; } }