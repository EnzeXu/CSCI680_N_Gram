public class TestStringComparator implements Hasher<String>, StreamComparator<BufferedInputStream>, Comparator<String>, Serializable { boolean reverse = true; public TestStringComparator() { } public TestStringComparator( boolean reverse ) { this.reverse = reverse; } @Override public int compare( String o1, String o2 ) { return reverse ? o2.compareTo( o1 ) : o1.compareTo( o2 ); } @Override public int compare( BufferedInputStream lhsStream, BufferedInputStream rhsStream ) { HadoopTupleInputStream lhsInput = new HadoopTupleInputStream( lhsStream, new TupleSerialization().getElementReader() ); HadoopTupleInputStream rhsInput = new HadoopTupleInputStream( rhsStream, new TupleSerialization().getElementReader() ); try { String s1 = (String) lhsInput.readString(); String s2 = (String) rhsInput.readString(); return reverse ? s2.compareTo( s1 ) : s1.compareTo( s2 ); } catch( IOException exception ) { throw new CascadingException( exception ); } } @Override public int hashCode( String value ) { if( value == null ) return 0; return value.hashCode(); } }