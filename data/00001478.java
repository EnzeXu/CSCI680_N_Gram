public class CompositeTaps { private CompositeTaps() { } public static Collection<? extends Tap> unwindNarrow( Class<? extends Tap> type, Tap tap ) { return Util.narrowIdentitySet( type, unwind( tap ) ); } public static Collection<Tap> unwind( Tap tap ) { Set<Tap> taps = Util.createIdentitySet(); addLeaves( tap, taps ); return taps; } private static void addLeaves( Tap tap, Set<Tap> taps ) { if( tap instanceof CompositeTap ) { Iterator<? extends Tap> childTaps = ( (CompositeTap<? extends Tap>) tap ).getChildTaps(); while( childTaps.hasNext() ) addLeaves( childTaps.next(), taps ); } else { taps.add( tap ); } } }