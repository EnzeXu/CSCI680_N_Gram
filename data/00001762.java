public class TupleSerializationProps extends Props { public static final String SERIALIZATION_TOKENS = "cascading . serialization . tokens" ; public static final String SERIALIZATION_COMPARISON_BITWISE_PREVENT = "cascading . serialization . comparison . bitwise . prevent" ; public static final String IGNORE_TYPES = "cascading . serialization . types . ignored" ; public static final String REQUIRE_TYPES = "cascading . serialization . types . required" ; public static final String HADOOP_IO_SERIALIZATIONS = "io . serializations" ; Map < Integer , String > serializationTokens = new LinkedHashMap < Integer , String > ( ) ; List < String > hadoopSerializations = new ArrayList < String > ( ) ; Boolean ignoreTypes ; Boolean requireTypes ; Boolean preventBitWiseComparisons ; public static void addSerializationToken ( Map < Object , Object > properties , int token , String className ) { String tokens = getSerializationTokens ( properties ) ; properties . put ( SERIALIZATION_TOKENS , Util . join ( " , " , Util . removeNulls ( tokens , token + "=" + className ) ) ) ; } public static String getSerializationTokens ( Map < Object , Object > properties ) { return ( String ) properties . get ( SERIALIZATION_TOKENS ) ; } public static void addSerialization ( Map < Object , Object > properties , String className ) { String serializations = ( String ) properties . get ( HADOOP_IO_SERIALIZATIONS ) ; properties . put ( HADOOP_IO_SERIALIZATIONS , Util . join ( " , " , Util . removeNulls ( serializations , className ) ) ) ; } public static TupleSerializationProps tupleSerializationProps ( ) { return new TupleSerializationProps ( ) ; } public TupleSerializationProps ( ) { } public Map < Integer , String > getSerializationTokens ( ) { return serializationTokens ; } public TupleSerializationProps setSerializationTokens ( Map < Integer , String > serializationTokens ) { this . serializationTokens = serializationTokens ; return this ; } public TupleSerializationProps addSerializationTokens ( Map < Integer , String > serializationTokens ) { this . serializationTokens . putAll ( serializationTokens ) ; return this ; } public TupleSerializationProps addSerializationToken ( int token , String serializationClassName ) { this . serializationTokens . put ( token , serializationClassName ) ; return this ; } public List < String > getHadoopSerializations ( ) { return hadoopSerializations ; } public TupleSerializationProps setHadoopSerializations ( List < String > hadoopSerializationClassNames ) { this . hadoopSerializations = hadoopSerializationClassNames ; return this ; } public TupleSerializationProps addHadoopSerializations ( List < String > hadoopSerializationClassNames ) { this . hadoopSerializations . addAll ( hadoopSerializationClassNames ) ; return this ; } public TupleSerializationProps addHadoopSerialization ( String hadoopSerializationClassName ) { this . hadoopSerializations . add ( hadoopSerializationClassName ) ; return this ; } public Boolean getIgnoreTypes ( ) { return ignoreTypes ; } public TupleSerializationProps setIgnoreTypes ( Boolean ignoreTypes ) { this . ignoreTypes = ignoreTypes ; return this ; } public Boolean getRequireTypes ( ) { return requireTypes ; } public TupleSerializationProps setRequireTypes ( Boolean requireTypes ) { this . requireTypes = requireTypes ; return this ; } public TupleSerializationProps preventBitWiseComparison ( boolean preventBitWiseComparisons ) { this . preventBitWiseComparisons = preventBitWiseComparisons ; return this ; } public boolean getPreventBitWiseComparisons ( ) { return preventBitWiseComparisons ; } @ Override protected void addPropertiesTo ( Properties properties ) { for ( Map . Entry < Integer , String > entry : serializationTokens . entrySet ( ) ) addSerializationToken ( properties , entry . getKey ( ) , entry . getValue ( ) ) ; for ( String hadoopSerialization : hadoopSerializations ) addSerialization ( properties , hadoopSerialization ) ; if ( ignoreTypes != null ) properties . put ( IGNORE_TYPES , ignoreTypes . toString ( ) ) ; if ( requireTypes != null ) properties . put ( REQUIRE_TYPES , requireTypes . toString ( ) ) ; if ( preventBitWiseComparisons != null ) properties . put ( SERIALIZATION_COMPARISON_BITWISE_PREVENT , preventBitWiseComparisons . toString ( ) ) ; } }