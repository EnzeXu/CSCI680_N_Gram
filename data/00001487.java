public class SplunkUtil { private static final Logger LOG = LoggerFactory . getLogger ( SplunkUtil . class ) ; public static Map < String , Object > loadSplunkRC ( ) throws IOException { String home = System . getenv ( "SPLUNK_RC_HOME" ) ; if ( home == null ) home = System . getProperty ( "user . home" ) ; Path path = Paths . get ( home + File . separator + " . splunkrc" ) ; if ( !Files . exists ( path ) ) return Collections . emptyMap ( ) ; LOG . info ( "reading . splunkrc from : { } " , path ) ; Map < String , Object > params = Files . readAllLines ( path ) . stream ( ) . map ( String : : trim ) . filter ( line - > !line . isEmpty ( ) ) . filter ( line - > !line . startsWith ( " # " ) ) . map ( line - > line . split ( "=" ) ) . filter ( pair - > pair . length == 2 ) . filter ( pair - > pair [ 1 ] != null ) . collect ( Collectors . toMap ( pair - > pair [ 0 ] , pair - > pair [ 1 ] ) ) ; params . computeIfPresent ( "port" , ( k , v ) - > Integer . parseInt ( v . toString ( ) ) ) ; return params ; } }