public class UniqueProps extends Props { public static String UNIQUE_CACHE_FACTORY = "cascading . unique . cachefactory . classname" ; public static final String UNIQUE_CACHE_CAPACITY = "cascading . aggregateby . cache . capacity" ; public static int UNIQUE_DEFAULT_CAPACITY = BaseCacheFactory . DEFAULT_CAPACITY ; public static final Class < ? extends BaseCacheFactory > DEFAULT_CACHE_FACTORY_CLASS = LRUHashMapCacheFactory . class ; private Properties properties ; public static UniqueProps uniqueProps ( ) { return new UniqueProps ( ) ; } public UniqueProps ( ) { this . properties = new Properties ( ) ; } public UniqueProps setCacheFactoryClass ( Class < ? extends BaseCacheFactory > cacheFactory ) { return setCacheFactoryClassName ( cacheFactory . getName ( ) ) ; } public UniqueProps setCacheFactoryClassName ( String cacheFactoryClassName ) { properties . setProperty ( UNIQUE_CACHE_FACTORY , cacheFactoryClassName ) ; return this ; } public UniqueProps setCapacity ( int capacity ) { properties . setProperty ( UNIQUE_CACHE_CAPACITY , String . valueOf ( capacity ) ) ; return this ; } public int getCapacity ( ) { String capacityValue = properties . getProperty ( UNIQUE_CACHE_CAPACITY ) ; if ( capacityValue == null ) return BaseCacheFactory . DEFAULT_CAPACITY ; return Integer . valueOf ( capacityValue ) ; } public String getCacheFactoryClassName ( ) { String className = properties . getProperty ( UNIQUE_CACHE_FACTORY ) ; if ( className == null ) return DEFAULT_CACHE_FACTORY_CLASS . getName ( ) ; return className ; } @ Override protected void addPropertiesTo ( Properties properties ) { properties . putAll ( this . properties ) ; } }