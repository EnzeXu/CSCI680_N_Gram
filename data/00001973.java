public class ValueIndexTupleDeserializer extends IndexTupleDeserializer<ValueIndexTuple> { public ValueIndexTupleDeserializer( TupleSerialization.SerializationElementReader elementReader ) { super( elementReader ); typeMap = elementReader.getTupleSerialization().getMaskedValueTypeMap(); if( elementReader.getTupleSerialization().areTypesRequired() ) { if( typeMap == null || typeMap.isEmpty() ) throw new IllegalStateException( "types are required to perform serialization, fields: " + elementReader.getTupleSerialization().getValueFieldsMap() ); } } @Override protected ValueIndexTuple createTuple() { return new ValueIndexTuple(); } @Override protected Class[] getTypesFor( int ordinal ) { return typeMap.get( ordinal ); } }