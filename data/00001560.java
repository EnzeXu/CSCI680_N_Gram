public class ElementMultiGraph extends BaseAnnotatedElementGraph implements ElementGraph, AnnotatedGraph { public ElementMultiGraph() { graph = new DirectedMultiGraph(); } public ElementMultiGraph( ElementGraph parent ) { graph = new DirectedMultiGraph( directed( parent ) ); addParentAnnotations( parent ); } public ElementMultiGraph( ElementGraph parent, EnumMultiMap annotations ) { this( parent ); getAnnotations().addAll( annotations ); } @Override public ElementGraph copyElementGraph() { return new ElementMultiGraph( this ); } protected class DirectedMultiGraph extends DirectedMultigraph<FlowElement, Scope> { public DirectedMultiGraph() { super( Scope.class ); } public DirectedMultiGraph( Graph<FlowElement, Scope> parent ) { this(); for( Scope edge : parent.edgeSet() ) { FlowElement s = parent.getEdgeSource( edge ); FlowElement t = parent.getEdgeTarget( edge ); addVertex( s ); addVertex( t ); addEdge( s, t, edge ); } } @Override protected DirectedSpecifics createSpecifics( boolean directed ) { return new DirectedSpecifics( this, new IdentityHashMap<FlowElement, DirectedEdgeContainer<FlowElement, Scope>>() ); } } }