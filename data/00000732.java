public class DBSettingsFragement extends PreferenceFragmentCompat { public static boolean KEYFILE_DEFAULT = false; private BackupManager backupManager; public static void Launch(Context ctx) { Intent i = new Intent(ctx, DBSettingsFragement.class); ctx.startActivity(i); } @Override public void onCreate(@Nullable Bundle savedInstanceState) { super.onCreate(savedInstanceState); setRetainInstance(true); } private static final String ROUNDS_PREFERENCE_TAG = "ROUNDS"; @Override public void onDisplayPreferenceDialog(Preference preference) { if (getFragmentManager().findFragmentByTag(ROUNDS_PREFERENCE_TAG) != null) { return; } String key = preference.getKey(); if ((preference instanceof EditTextPreference) && key.equals(getString(R.string.rounds_key)) ) { final DialogFragment f = RoundsPreferenceFragment.newInstance(preference.getKey()); f.setTargetFragment(this, 0); f.show(getFragmentManager(), ROUNDS_PREFERENCE_TAG); } else { super.onDisplayPreferenceDialog(preference); } } @Override public void onCreatePreferences(Bundle savedInstanceState, String rootKey) { addPreferencesFromResource(R.xml.preferences_db); Database db = App.getDB(); if ( db.Loaded() && db.pm.appSettingsEnabled() ) { Preference rounds = findPreference(getString(R.string.rounds_key)); rounds.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { public boolean onPreferenceChange(Preference preference, Object newValue) { setRounds(App.getDB(), preference); return true; } }); setRounds(db, rounds); Preference algorithm = findPreference(getString(R.string.algorithm_key)); setAlgorithm(db, algorithm); } backupManager = new BackupManager(getContext()); } @Override public void onStop() { backupManager.dataChanged(); super.onStop(); } private void setRounds(Database db, Preference rounds) { rounds.setSummary(Long.toString(db.pm.getNumRounds())); } private void setAlgorithm(Database db, Preference algorithm) { int resId; if ( db.pm.getEncAlgorithm() == PwEncryptionAlgorithm.Rjindal ) { resId = R.string.rijndael; } else { resId = R.string.twofish; } algorithm.setSummary(resId); } }