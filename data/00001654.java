public class ElementFlowProcess extends FlowProcessWrapper { private final ConfigDef configDef; private final ConfigDef.Getter getter; public ElementFlowProcess( FlowProcess flowProcess, ConfigDef configDef ) { super( flowProcess ); this.configDef = configDef; this.getter = new ConfigDef.Getter() { @Override public String update( String key, String value ) { String result = get( key ); if( result == null ) return value; if( result.contains( value ) ) return result; return result + "," + value; } @Override public String get( String key ) { Object value = getDelegate().getProperty( key ); if( value == null ) return null; return value.toString(); } }; } @Override public Object getProperty( String key ) { return configDef.apply( key, getter ); } @Override public Collection<String> getPropertyKeys() { Set<String> keys = new HashSet<String>(); keys.addAll( getDelegate().getPropertyKeys() ); keys.addAll( configDef.getAllKeys() ); return Collections.unmodifiableSet( keys ); } }