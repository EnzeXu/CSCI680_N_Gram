public class TupleElementStreamComparator implements StreamComparator < HadoopTupleInputStream > , Comparator < Object > { final StreamComparator comparator ; public TupleElementStreamComparator ( StreamComparator comparator ) { this . comparator = comparator ; } @ Override public int compare ( Object lhs , Object rhs ) { return ( ( Comparator < Object > ) comparator ) . compare ( lhs , rhs ) ; } @ Override public int compare ( HadoopTupleInputStream lhsStream , HadoopTupleInputStream rhsStream ) { try { int lhsToken = lhsStream . readToken ( ) ; int rhsToken = rhsStream . readToken ( ) ; if ( lhsToken == HadoopTupleOutputStream . WRITABLE_TOKEN ) lhsStream . readString ( ) ; if ( rhsToken == HadoopTupleOutputStream . WRITABLE_TOKEN ) rhsStream . readString ( ) ; InputStream lhs = lhsToken == 0 ? null : lhsStream . getInputStream ( ) ; InputStream rhs = rhsToken == 0 ? null : rhsStream . getInputStream ( ) ; return comparator . compare ( lhs , rhs ) ; } catch ( Exception exception ) { throw new CascadingException ( "unable to compare Tuples , likely a CoGroup is being attempted on fields of " + "different types or custom comparators are incorrectly set on Fields" , exception ) ; } } }