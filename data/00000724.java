public class ProgressTask implements Runnable { private Activity mAct; private Handler mHandler; private RunnableOnFinish mTask; private ProgressDialog mPd; public ProgressTask(Activity act, RunnableOnFinish task, int messageId) { mAct = act; mTask = task; mHandler = new Handler(); mPd = new ProgressDialog(mAct); mPd.setCanceledOnTouchOutside(false); mPd.setTitle(act.getText(R.string.progress_title)); mPd.setMessage(act.getText(messageId)); mTask.setStatus(new UpdateStatus(act, mHandler, mPd)); mTask.mFinish = new AfterTask(task.mFinish, mHandler); } public void run() { mPd.show(); Thread t = new Thread(mTask); t.start(); } private class AfterTask extends OnFinish { public AfterTask(OnFinish finish, Handler handler) { super(finish, handler); } @Override public void run() { super.run(); mHandler.post(new CloseProcessDialog()); } } private class CloseProcessDialog implements Runnable { public void run() { Activity act = mPd.getOwnerActivity(); if (act != null && act.isFinishing()) { return; } boolean isDestroyed = false; if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) { isDestroyed = mAct.isDestroyed(); } if ( (mPd != null) && mPd.isShowing() && !isDestroyed) { mPd.dismiss(); } } } }