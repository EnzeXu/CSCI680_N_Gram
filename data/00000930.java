public class BoundingBoxSampler { private TwoGeoHashBoundingBox boundingBox ; private Set < Integer > alreadyUsed = new HashSet < > ( ) ; private int maxSamples ; private Random rand = new Random ( ) ; public BoundingBoxSampler ( TwoGeoHashBoundingBox bbox ) { boundingBox = bbox ; long maxSamplesLong = GeoHash . stepsBetween ( bbox . getSouthWestCorner ( ) , bbox . getNorthEastCorner ( ) ) ; if ( maxSamplesLong > Integer . MAX_VALUE ) { throw new IllegalArgumentException ( "This bounding box is too big too sample using this algorithm" ) ; } maxSamples = ( int ) maxSamplesLong ; } public BoundingBoxSampler ( TwoGeoHashBoundingBox bbox , long seed ) { this ( bbox ) ; rand = new Random ( seed ) ; } public TwoGeoHashBoundingBox getBoundingBox ( ) { return boundingBox ; } public GeoHash next ( ) { if ( alreadyUsed . size ( ) == maxSamples ) { return null ; } int idx = rand . nextInt ( maxSamples + 1 ) ; while ( alreadyUsed . contains ( idx ) ) { idx = rand . nextInt ( maxSamples + 1 ) ; } alreadyUsed . add ( idx ) ; GeoHash gh = boundingBox . getSouthWestCorner ( ) . next ( idx ) ; if ( !boundingBox . getBoundingBox ( ) . contains ( gh . getOriginatingPoint ( ) ) ) { return next ( ) ; } return gh ; } }