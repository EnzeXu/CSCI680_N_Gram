public class Log4JLogger extends AbstractLogger { private final Logger l4jLogger; public Log4JLogger(String name) { super(name); l4jLogger = Logger.getLogger(name); } @Override public boolean isTraceEnabled() { return (l4jLogger.isTraceEnabled()); } @Override public boolean isDebugEnabled() { return (l4jLogger.isDebugEnabled()); } @Override public boolean isInfoEnabled() { return (l4jLogger.isInfoEnabled()); } @Override public void log(Level level, Object message, Throwable e) { org.apache.log4j.Level pLevel = org.apache.log4j.Level.DEBUG; switch (level == null ? Level.FATAL : level) { case TRACE: pLevel = org.apache.log4j.Level.TRACE; break; case DEBUG: pLevel = org.apache.log4j.Level.DEBUG; break; case INFO: pLevel = org.apache.log4j.Level.INFO; break; case WARN: pLevel = org.apache.log4j.Level.WARN; break; case ERROR: pLevel = org.apache.log4j.Level.ERROR; break; case FATAL: pLevel = org.apache.log4j.Level.FATAL; break; default: pLevel = org.apache.log4j.Level.FATAL; l4jLogger.log("net.spy.compat.log.AbstractLogger", pLevel, "Unhandled " + "log level: " + level + " for the following message", null); } l4jLogger.log("net.spy.compat.log.AbstractLogger", pLevel, message, e); } }