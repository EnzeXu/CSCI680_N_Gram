public class S3TapProps extends Props { public static final String S3_ENDPOINT = "cascading.tap.aws.s3.endpoint"; public static final String S3_REGION = "cascading.tap.aws.s3.region"; public static final String S3_PATH_STYLE_ACCESS = "cascading.tap.aws.s3.path_style_access"; public static final String S3_PROXY_HOST = "cascading.tap.aws.s3.proxy.host"; public static final String S3_PROXY_PORT = "cascading.tap.aws.s3.proxy.port"; String endpoint; String region; boolean pathStyleAccess = false; String proxyHost; int proxyPort; public S3TapProps() { } public String getEndpoint() { return endpoint; } public S3TapProps setEndpoint( String endpoint ) { this.endpoint = endpoint; return this; } public String getRegion() { return region; } public S3TapProps setRegion( String region ) { this.region = region; return this; } public boolean isPathStyleAccess() { return pathStyleAccess; } public S3TapProps setPathStyleAccess( boolean pathStyleAccess ) { this.pathStyleAccess = pathStyleAccess; return this; } public String getProxyHost() { return proxyHost; } public S3TapProps setProxyHost( String proxyHost ) { this.proxyHost = proxyHost; return this; } public int getProxyPort() { return proxyPort; } public S3TapProps setProxyPort( int proxyPort ) { this.proxyPort = proxyPort; return this; } @Override protected void addPropertiesTo( Properties properties ) { if( endpoint != null ) properties.setProperty( S3_ENDPOINT, endpoint ); if( region != null ) properties.setProperty( S3_REGION, region ); if( pathStyleAccess ) properties.setProperty( S3_PATH_STYLE_ACCESS, "true" ); if( proxyHost != null ) properties.setProperty( S3_PROXY_HOST, proxyHost ); if( proxyPort > 0 ) properties.setProperty( S3_PROXY_PORT, String.valueOf( proxyPort ) ); } }