public class PwGroupOutputV3 { public static final byte [ ] GROUPID_FIELD_TYPE = LEDataOutputStream . writeUShortBuf ( 1 ) ; public static final byte [ ] NAME_FIELD_TYPE = LEDataOutputStream . writeUShortBuf ( 2 ) ; public static final byte [ ] CREATE_FIELD_TYPE = LEDataOutputStream . writeUShortBuf ( 3 ) ; public static final byte [ ] MOD_FIELD_TYPE = LEDataOutputStream . writeUShortBuf ( 4 ) ; public static final byte [ ] ACCESS_FIELD_TYPE = LEDataOutputStream . writeUShortBuf ( 5 ) ; public static final byte [ ] EXPIRE_FIELD_TYPE = LEDataOutputStream . writeUShortBuf ( 6 ) ; public static final byte [ ] IMAGEID_FIELD_TYPE = LEDataOutputStream . writeUShortBuf ( 7 ) ; public static final byte [ ] LEVEL_FIELD_TYPE = LEDataOutputStream . writeUShortBuf ( 8 ) ; public static final byte [ ] FLAGS_FIELD_TYPE = LEDataOutputStream . writeUShortBuf ( 9 ) ; public static final byte [ ] END_FIELD_TYPE = LEDataOutputStream . writeUShortBuf ( 0xFFFF ) ; public static final byte [ ] LONG_FOUR = LEDataOutputStream . writeIntBuf ( 4 ) ; public static final byte [ ] GROUPID_FIELD_SIZE = LONG_FOUR ; public static final byte [ ] DATE_FIELD_SIZE = LEDataOutputStream . writeIntBuf ( 5 ) ; public static final byte [ ] IMAGEID_FIELD_SIZE = LONG_FOUR ; public static final byte [ ] LEVEL_FIELD_SIZE = LEDataOutputStream . writeIntBuf ( 2 ) ; public static final byte [ ] FLAGS_FIELD_SIZE = LONG_FOUR ; public static final byte [ ] ZERO_FIELD_SIZE = LEDataOutputStream . writeIntBuf ( 0 ) ; private OutputStream mOS ; private PwGroupV3 mPG ; public PwGroupOutputV3 ( PwGroupV3 pg , OutputStream os ) { mPG = pg ; mOS = os ; } public void output ( ) throws IOException { mOS . write ( GROUPID_FIELD_TYPE ) ; mOS . write ( GROUPID_FIELD_SIZE ) ; mOS . write ( LEDataOutputStream . writeIntBuf ( mPG . groupId ) ) ; mOS . write ( NAME_FIELD_TYPE ) ; Types . writeCString ( mPG . name , mOS ) ; mOS . write ( CREATE_FIELD_TYPE ) ; mOS . write ( DATE_FIELD_SIZE ) ; mOS . write ( mPG . tCreation . getCDate ( ) ) ; mOS . write ( MOD_FIELD_TYPE ) ; mOS . write ( DATE_FIELD_SIZE ) ; mOS . write ( mPG . tLastMod . getCDate ( ) ) ; mOS . write ( ACCESS_FIELD_TYPE ) ; mOS . write ( DATE_FIELD_SIZE ) ; mOS . write ( mPG . tLastAccess . getCDate ( ) ) ; mOS . write ( EXPIRE_FIELD_TYPE ) ; mOS . write ( DATE_FIELD_SIZE ) ; mOS . write ( mPG . tExpire . getCDate ( ) ) ; mOS . write ( IMAGEID_FIELD_TYPE ) ; mOS . write ( IMAGEID_FIELD_SIZE ) ; mOS . write ( LEDataOutputStream . writeIntBuf ( mPG . icon . iconId ) ) ; mOS . write ( LEVEL_FIELD_TYPE ) ; mOS . write ( LEVEL_FIELD_SIZE ) ; mOS . write ( LEDataOutputStream . writeUShortBuf ( mPG . level ) ) ; mOS . write ( FLAGS_FIELD_TYPE ) ; mOS . write ( FLAGS_FIELD_SIZE ) ; mOS . write ( LEDataOutputStream . writeIntBuf ( mPG . flags ) ) ; mOS . write ( END_FIELD_TYPE ) ; mOS . write ( ZERO_FIELD_SIZE ) ; } }