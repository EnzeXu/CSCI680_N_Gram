public class PwDbInnerHeaderOutputV4 { private PwDatabaseV4 db ; private PwDbHeaderV4 header ; private LEDataOutputStream los ; public PwDbInnerHeaderOutputV4 ( PwDatabaseV4 db , PwDbHeaderV4 header , OutputStream os ) { this . db = db ; this . header = header ; this . los = new LEDataOutputStream ( os ) ; } public void output ( ) throws IOException { los . write ( PwDbInnerHeaderV4Fields . InnerRandomStreamID ) ; los . writeInt ( 4 ) ; los . writeInt ( header . innerRandomStream . id ) ; int streamKeySize = header . innerRandomStreamKey . length ; los . write ( PwDbInnerHeaderV4Fields . InnerRandomstreamKey ) ; los . writeInt ( streamKeySize ) ; los . write ( header . innerRandomStreamKey ) ; for ( ProtectedBinary bin : db . binPool . binaries ( ) ) { byte flag = KdbxBinaryFlags . None ; if ( bin . isProtected ( ) ) { flag |= KdbxBinaryFlags . Protected ; } los . write ( PwDbInnerHeaderV4Fields . Binary ) ; los . writeInt ( ( int ) bin . length ( ) + 1 ) ; los . write ( flag ) ; InputStream inputStream = bin . getData ( ) ; int binLength = bin . length ( ) ; Util . copyStream ( inputStream , los ) ; } los . write ( PwDbInnerHeaderV4Fields . EndOfHeader ) ; los . writeInt ( 0 ) ; } }