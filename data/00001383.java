public class FirstBy extends AggregateBy { public static class FirstPartials implements Functor { private final Fields declaredFields; private Boolean doComparison; public FirstPartials( Fields declaredFields ) { this.declaredFields = declaredFields; } @Override public Fields getDeclaredFields() { return declaredFields; } @Override public Tuple aggregate( FlowProcess flowProcess, TupleEntry args, Tuple context ) { if( doComparison == null ) doComparison = args.getFields().hasComparators(); if( context == null || ( doComparison && args.getFields().compare( context, args.getTuple() ) > 0 ) ) return args.getTupleCopy(); return context; } @Override public Tuple complete( FlowProcess flowProcess, Tuple context ) { return context; } } @ConstructorProperties({"firstFields"}) public FirstBy( Fields firstFields ) { super( firstFields, new FirstPartials( firstFields ), new First( firstFields ) ); } @ConstructorProperties({"argumentFields", "firstFields"}) public FirstBy( Fields argumentFields, Fields firstFields ) { super( argumentFields, new FirstPartials( argumentFields ), new First( firstFields ) ); } @ConstructorProperties({"pipe", "groupingFields", "firstFields"}) public FirstBy( Pipe pipe, Fields groupingFields, Fields firstFields ) { this( null, pipe, groupingFields, firstFields ); } @ConstructorProperties({"pipe", "groupingFields", "firstFields", "threshold"}) public FirstBy( Pipe pipe, Fields groupingFields, Fields firstFields, int threshold ) { this( null, pipe, groupingFields, firstFields, threshold ); } @ConstructorProperties({"name", "pipe", "groupingFields", "firstFields"}) public FirstBy( String name, Pipe pipe, Fields groupingFields, Fields firstFields ) { this( name, pipe, groupingFields, firstFields, USE_DEFAULT_THRESHOLD ); } @ConstructorProperties({"name", "pipe", "groupingFields", "firstFields", "threshold"}) public FirstBy( String name, Pipe pipe, Fields groupingFields, Fields firstFields, int threshold ) { this( name, Pipe.pipes( pipe ), groupingFields, firstFields, threshold ); } @ConstructorProperties({"pipes", "groupingFields", "firstFields"}) public FirstBy( Pipe[] pipes, Fields groupingFields, Fields firstFields ) { this( null, pipes, groupingFields, firstFields, USE_DEFAULT_THRESHOLD ); } @ConstructorProperties({"pipes", "groupingFields", "firstFields", "threshold"}) public FirstBy( Pipe[] pipes, Fields groupingFields, Fields firstFields, int threshold ) { this( null, pipes, groupingFields, firstFields, threshold ); } @ConstructorProperties({"name", "pipes", "groupingFields", "firstFields"}) public FirstBy( String name, Pipe[] pipes, Fields groupingFields, Fields firstFields ) { this( name, pipes, groupingFields, firstFields, USE_DEFAULT_THRESHOLD ); } @ConstructorProperties({"name", "pipes", "groupingFields", "firstFields", "threshold"}) public FirstBy( String name, Pipe[] pipes, Fields groupingFields, Fields firstFields, int threshold ) { super( name, pipes, groupingFields, firstFields, new FirstPartials( firstFields ), new First( firstFields ), threshold ); } }