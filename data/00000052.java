public class WhalinV1TranscoderTest extends BaseTranscoderCase { @ Override protected void setUp ( ) throws Exception { super . setUp ( ) ; setTranscoder ( new WhalinV1Transcoder ( ) ) ; } @ Override public void testByteArray ( ) throws Exception { byte [ ] a = { 'a' , 'b' , 'c' } ; CachedData cd = getTranscoder ( ) . encode ( a ) ; byte [ ] decoded = ( byte [ ] ) getTranscoder ( ) . decode ( cd ) ; assertNotNull ( decoded ) ; assertTrue ( Arrays . equals ( a , decoded ) ) ; } public void testJsonObject ( ) { WhalinV1Transcoder transcoder = ( ( WhalinV1Transcoder ) getTranscoder ( ) ) ; String json = " { \"aaaaaaaaaaaaaaaaaaaaaaaaa\" : " + "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" } " ; transcoder . setCompressionThreshold ( 8 ) ; CachedData cd = transcoder . encode ( json ) ; assertFalse ( "Flags shows JSON was compressed" , ( cd . getFlags ( ) & ( 1L < < WhalinV1Transcoder . COMPRESSED ) ) != 0 ) ; assertTrue ( "JSON was incorrectly encoded" , Arrays . equals ( json . getBytes ( ) , Arrays . copyOfRange ( cd . getData ( ) , 1 , cd . getData ( ) . length ) ) ) ; assertEquals ( "JSON was harmed , should not have been" , json , transcoder . decode ( cd ) ) ; } @ Override protected int getStringFlags ( ) { return 0 ; } }