public class TranscoderUtilsTest extends TestCase { private TranscoderUtils tu ; private byte [ ] oversizeBytes = new byte [ 16 ] ; @ Override protected void setUp ( ) throws Exception { super . setUp ( ) ; tu = new TranscoderUtils ( true ) ; } public void testBooleanOverflow ( ) { try { boolean b = tu . decodeBoolean ( oversizeBytes ) ; fail ( "Got " + b + " expected assertion . " ) ; } catch ( AssertionError e ) { } } public void testByteOverflow ( ) { try { byte b = tu . decodeByte ( oversizeBytes ) ; fail ( "Got " + b + " expected assertion . " ) ; } catch ( AssertionError e ) { } } public void testIntOverflow ( ) { try { int b = tu . decodeInt ( oversizeBytes ) ; fail ( "Got " + b + " expected assertion . " ) ; } catch ( AssertionError e ) { } } public void testLongOverflow ( ) { try { long b = tu . decodeLong ( oversizeBytes ) ; fail ( "Got " + b + " expected assertion . " ) ; } catch ( AssertionError e ) { } } public void testPackedLong ( ) { assertEquals ( " [ 1 ] " , Arrays . toString ( tu . encodeLong ( 1 ) ) ) ; } public void testUnpackedLong ( ) { assertEquals ( " [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ] " , Arrays . toString ( new TranscoderUtils ( false ) . encodeLong ( 1 ) ) ) ; } }