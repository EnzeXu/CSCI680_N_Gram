public class AssertSizeEquals extends BaseAssertion implements ValueAssertion { private final int size ; @ ConstructorProperties ( { "size" } ) public AssertSizeEquals ( int size ) { super ( "tuple size %s , is not equal to : %s , in tuple : %s" ) ; this . size = size ; } @ Property ( name = "size" , visibility = Visibility . PRIVATE ) @ PropertyDescription ( "The expected tuple size . " ) public int getSize ( ) { return size ; } @ Override public void doAssert ( FlowProcess flowProcess , ValueAssertionCall assertionCall ) { TupleEntry input = assertionCall . getArguments ( ) ; if ( input . size ( ) != size ) fail ( input . size ( ) , size , input . getTuple ( ) . print ( ) ) ; } @ Override public boolean equals ( Object object ) { if ( this == object ) return true ; if ( ! ( object instanceof AssertSizeEquals ) ) return false ; if ( !super . equals ( object ) ) return false ; AssertSizeEquals that = ( AssertSizeEquals ) object ; if ( size != that . size ) return false ; return true ; } @ Override public int hashCode ( ) { int result = super . hashCode ( ) ; result = 31 * result + size ; return result ; } }