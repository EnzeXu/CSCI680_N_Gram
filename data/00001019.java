public class TezSourceStage extends SourceStage { private static final Logger LOG = LoggerFactory . getLogger ( TezSourceStage . class ) ; private final MRInput logicalInput ; private MRReader reader ; public TezSourceStage ( FlowProcess flowProcess , Tap source , LogicalInput logicalInput ) { super ( flowProcess , source ) ; if ( logicalInput == null ) throw new IllegalArgumentException ( "input must not be null" ) ; this . logicalInput = ( MRInput ) logicalInput ; } @ Override public void prepare ( ) { LOG . info ( "calling { } # start ( ) on : { } " , logicalInput . getClass ( ) . getSimpleName ( ) , getSource ( ) ) ; logicalInput . start ( ) ; Hadoop3TezFlowProcess tezFlowProcess = ( Hadoop3TezFlowProcess ) FlowProcessWrapper . undelegate ( flowProcess ) ; TezConfiguration configuration = tezFlowProcess . getConfiguration ( ) ; try { reader = ( MRReader ) logicalInput . getReader ( ) ; } catch ( IOException exception ) { throw new CascadeException ( "unable to get reader" , exception ) ; } TezUtil . setSourcePathForSplit ( logicalInput , reader , configuration ) ; } @ Override public void run ( Object input ) throws Throwable { RecordReader oldRecordReader = ( RecordReader ) ( reader ) . getRecordReader ( ) ; super . run ( oldRecordReader ) ; } }