public class AnnotationExpression extends ElementExpression { Enum annotation = null; public AnnotationExpression( Enum annotation ) { this.annotation = annotation; } public AnnotationExpression( ElementCapture capture, Enum annotation ) { super( capture ); this.annotation = annotation; } @Override public boolean applies( PlannerContext plannerContext, ElementGraph elementGraph, FlowElement flowElement ) { if( elementGraph instanceof AnnotatedGraph && ( (AnnotatedGraph) elementGraph ).hasAnnotations() ) return ( (AnnotatedGraph) elementGraph ).getAnnotations().getValues( annotation ).contains( flowElement ); return false; } @Override public String toString() { final StringBuilder sb = new StringBuilder( "AnnotationExpression{" ); sb.append( "annotation=" ).append( annotation ); sb.append( '}' ); return sb.toString(); } }