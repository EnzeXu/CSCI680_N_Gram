public class JSONSetFunction extends NestedSetFunction < JsonNode , ArrayNode > { @ ConstructorProperties ( { "fieldDeclaration" } ) public JSONSetFunction ( Fields fieldDeclaration ) { super ( JSONCoercibleType . TYPE , fieldDeclaration ) ; } @ ConstructorProperties ( { "fieldDeclaration" , "rootPointer" } ) public JSONSetFunction ( Fields fieldDeclaration , String rootPointer ) { super ( JSONCoercibleType . TYPE , fieldDeclaration , rootPointer ) ; } public JSONSetFunction ( Fields fieldDeclaration , Fields fromFields , String stringPointer ) { this ( fieldDeclaration , Collections . singletonMap ( fromFields , stringPointer ) ) ; } @ ConstructorProperties ( { "fieldDeclaration" , "pointerMap" } ) public JSONSetFunction ( Fields fieldDeclaration , Map < Fields , String > pointerMap ) { super ( JSONCoercibleType . TYPE , fieldDeclaration , pointerMap ) ; } @ ConstructorProperties ( { "coercibleType" , "fieldDeclaration" } ) public JSONSetFunction ( JSONCoercibleType coercibleType , Fields fieldDeclaration ) { super ( coercibleType , fieldDeclaration ) ; } @ ConstructorProperties ( { "coercibleType" , "fieldDeclaration" , "rootPointer" } ) public JSONSetFunction ( JSONCoercibleType coercibleType , Fields fieldDeclaration , String rootPointer ) { super ( coercibleType , fieldDeclaration , rootPointer ) ; } @ ConstructorProperties ( { "coercibleType" , "fieldDeclaration" , "fromFields" , "stringPointer" } ) public JSONSetFunction ( JSONCoercibleType coercibleType , Fields fieldDeclaration , Fields fromFields , String stringPointer ) { this ( coercibleType , fieldDeclaration , Collections . singletonMap ( fromFields , stringPointer ) ) ; } @ ConstructorProperties ( { "coercibleType" , "fieldDeclaration" , "pointerMap" } ) public JSONSetFunction ( JSONCoercibleType coercibleType , Fields fieldDeclaration , Map < Fields , String > pointerMap ) { super ( coercibleType , fieldDeclaration , pointerMap ) ; } }