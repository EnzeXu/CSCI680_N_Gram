public class BooleanCoerce extends Coercions . Coerce < Boolean > { protected BooleanCoerce ( Map < Type , Coercions . Coerce > map ) { super ( map ) ; } @ Override public Class < Boolean > getCanonicalType ( ) { return boolean . class ; } @ Override public < T > ToCanonical < T , Boolean > from ( Type from ) { if ( from == getCanonicalType ( ) ) return f - > f != null && ( Boolean ) f ; if ( from instanceof Class && Boolean . class . isAssignableFrom ( ( Class < ? > ) from ) ) return f - > f != null && ( ( Boolean ) f ) ; return f - > f != null && Boolean . parseBoolean ( f . toString ( ) ) ; } @ Override public Boolean coerce ( Object value ) { if ( value instanceof Boolean ) return ( Boolean ) value ; else if ( value == null || value . toString ( ) . isEmpty ( ) ) return false ; else return Boolean . parseBoolean ( value . toString ( ) ) ; } }