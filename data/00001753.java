public class ClasspathPlatformTest extends PlatformTestCase { public ClasspathPlatformTest ( ) { super ( true ) ; } public static class TestFunction extends BaseOperation implements Function { @ Override public void operate ( FlowProcess flowProcess , FunctionCall functionCall ) { URL resource = Thread . currentThread ( ) . getContextClassLoader ( ) . getResource ( testClasspathJarContents ) ; if ( resource == null ) throw new RuntimeException ( "cannot find resource" ) ; functionCall . getOutputCollector ( ) . add ( functionCall . getArguments ( ) ) ; } } @ Test public void testSimpleClasspath ( ) throws Exception { getPlatform ( ) . copyFromLocal ( inputFileApache ) ; Tap source = getPlatform ( ) . getTextFile ( new Fields ( "offset" , "line" ) , inputFileApache ) ; Pipe pipe = new Pipe ( "test" ) ; pipe = new Each ( pipe , new Fields ( "line" ) , new TestFunction ( ) , Fields . RESULTS ) ; Tap sink = getPlatform ( ) . getTextFile ( getOutputPath ( "classpath" ) , SinkMode . REPLACE ) ; FlowDef flowDef = FlowDef . flowDef ( ) . addSource ( "test" , source ) . addTailSink ( pipe , sink ) . addToClassPath ( testClasspathJar ) ; Flow flow = getPlatform ( ) . getFlowConnector ( ) . connect ( flowDef ) ; flow . complete ( ) ; validateLength ( flow , 10 ) ; } }