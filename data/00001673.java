public class FieldsPosCacheBench { private static Comparable[] comparables = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o"}; private static Fields fieldsUntyped = new Fields( comparables ); private static Fields[] fields; private static Comparable<?>[][] elements; static { fields = new Fields[ comparables.length ]; elements = new Comparable[ comparables.length ][]; for( int i = 0; i < comparables.length; i++ ) { elements[ i ] = Arrays.copyOf( comparables, i + 1 ); fields[ i ] = new Fields( elements[ i ] ); } } @Param({"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"}) private int index; @Benchmark public void containsIdentity( Blackhole bh ) { bh.consume( fieldsUntyped.contains( fields[ index ] ) ); } @Benchmark public void containsEquals( Blackhole bh ) { Fields value = new Fields( elements[ index ] ); bh.consume( fieldsUntyped.contains( value ) ); } }