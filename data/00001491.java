public class SplunkIndexTap extends SplunkTap { private String indexName ; public SplunkIndexTap ( SplunkScheme scheme , String host , int port , String indexName ) { super ( scheme , host , port ) ; this . indexName = indexName ; } public SplunkIndexTap ( SplunkScheme scheme , ServiceArgs serviceArgs , String indexName ) { super ( scheme , serviceArgs ) ; this . indexName = indexName ; } public SplunkIndexTap ( SplunkScheme scheme , ServiceArgs serviceArgs , JobExportArgs exportArgs , String indexName ) { super ( scheme , serviceArgs , exportArgs ) ; this . indexName = indexName ; } public SplunkIndexTap ( SplunkScheme scheme , ServiceArgs serviceArgs , JobExportArgs exportArgs , SinkMode sinkMode , String indexName ) { super ( scheme , serviceArgs , exportArgs , sinkMode ) ; this . indexName = indexName ; } public SplunkIndexTap ( SplunkScheme scheme , Service service , String indexName ) { super ( scheme , service , null ) ; this . indexName = indexName ; } public SplunkIndexTap ( SplunkScheme scheme , Service service , JobExportArgs exportArgs , String indexName ) { super ( scheme , service , exportArgs ) ; this . indexName = indexName ; } public SplunkIndexTap ( SplunkScheme scheme , Service service , JobExportArgs exportArgs , SinkMode sinkMode , String indexName ) { super ( scheme , service , exportArgs , sinkMode ) ; this . indexName = indexName ; } @ Override protected String getSplunkQuery ( ) { return null ; } @ Override protected String getSplunkPath ( ) { return "/" + indexName ; } @ Override protected String getSearch ( ) { return String . format ( "search index=%s *" , indexName ) ; } @ Override public TupleEntryCollector openForWrite ( FlowProcess < ? extends Properties > flowProcess , OutputStream outputStream ) throws IOException { Index index = getOrCreateIndex ( ) ; Socket socket = index . attach ( ) ; OutputStream stream = new BufferedOutputStream ( socket . getOutputStream ( ) ) { @ Override public void close ( ) throws IOException { super . close ( ) ; socket . close ( ) ; } } ; return new TupleEntrySchemeCollector < Properties , OutputStream > ( flowProcess , this , getScheme ( ) , stream , this : : getIdentifier ) ; } protected Index getOrCreateIndex ( ) { Index index = getIndex ( ) ; if ( index == null ) index = getService ( ) . getIndexes ( ) . create ( indexName ) ; return index ; } protected Index getIndex ( ) { return getService ( ) . getIndexes ( ) . get ( indexName ) ; } @ Override public boolean createResource ( Properties conf ) { Index index = getOrCreateIndex ( ) ; return index != null ; } @ Override public boolean deleteResource ( Properties conf ) { Index index = getIndex ( ) ; index . remove ( ) ; return true ; } @ Override public boolean resourceExists ( Properties conf ) throws IOException { return getIndex ( ) != null ; } @ Override public long getModifiedTime ( Properties conf ) throws IOException { return resourceExists ( conf ) ? Long . MAX_VALUE : 0 ; } }