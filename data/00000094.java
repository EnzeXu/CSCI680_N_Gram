public class AuthThreadMonitor extends SpyObject { private final Map < Object , AuthThread > nodeMap ; public AuthThreadMonitor ( ) { nodeMap = new HashMap < Object , AuthThread > ( ) ; } public synchronized void authConnection ( MemcachedConnection conn , OperationFactory opFact , AuthDescriptor authDescriptor , MemcachedNode node ) { interruptOldAuth ( node ) ; AuthThread newSASLAuthenticator = new AuthThread ( conn , opFact , authDescriptor , node ) ; nodeMap . put ( node , newSASLAuthenticator ) ; } public synchronized void interruptAllPendingAuth ( ) { for ( AuthThread toStop : nodeMap . values ( ) ) { if ( toStop . isAlive ( ) ) { getLogger ( ) . warn ( "Connection shutdown in progress - interrupting " + "waiting authentication thread . " ) ; toStop . interrupt ( ) ; } } } private void interruptOldAuth ( MemcachedNode nodeToStop ) { AuthThread toStop = nodeMap . get ( nodeToStop ) ; if ( toStop != null ) { if ( toStop . isAlive ( ) ) { getLogger ( ) . warn ( "Incomplete authentication interrupted for node " + nodeToStop ) ; toStop . interrupt ( ) ; } nodeMap . remove ( nodeToStop ) ; } } protected Map < Object , AuthThread > getNodeMap ( ) { return nodeMap ; } }