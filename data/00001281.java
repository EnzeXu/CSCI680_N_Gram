public class DecoratorTap < MetaInfo , Config , Input , Output > extends Tap < Config , Input , Output > { protected MetaInfo metaInfo ; protected Tap < Config , Input , Output > original ; @ ConstructorProperties ( { "metaInfo" , "original" } ) public DecoratorTap ( MetaInfo metaInfo , Tap < Config , Input , Output > original ) { setMetaInfo ( metaInfo ) ; setOriginal ( original ) ; } @ ConstructorProperties ( { "original" } ) public DecoratorTap ( Tap < Config , Input , Output > original ) { setOriginal ( original ) ; } public MetaInfo getMetaInfo ( ) { return metaInfo ; } public Tap < Config , Input , Output > getOriginal ( ) { return original ; } protected void setOriginal ( Tap < Config , Input , Output > original ) { if ( original == null ) throw new IllegalArgumentException ( "wrapped tap value may not be null" ) ; this . original = original ; } protected void setMetaInfo ( MetaInfo metaInfo ) { this . metaInfo = metaInfo ; } @ Override public Scheme < Config , Input , Output , ? , ? > getScheme ( ) { return original . getScheme ( ) ; } @ Override public String getTrace ( ) { return original . getTrace ( ) ; } @ Override public void flowConfInit ( Flow < Config > flow ) { original . flowConfInit ( flow ) ; } @ Override public void sourceConfInit ( FlowProcess < ? extends Config > flowProcess , Config conf ) { original . sourceConfInit ( flowProcess , conf ) ; } @ Override public void sinkConfInit ( FlowProcess < ? extends Config > flowProcess , Config conf ) { original . sinkConfInit ( flowProcess , conf ) ; } @ Override public String getIdentifier ( ) { return original . getIdentifier ( ) ; } @ Override public Fields getSourceFields ( ) { return original . getSourceFields ( ) ; } @ Override public Fields getSinkFields ( ) { return original . getSinkFields ( ) ; } @ Override public TupleEntryIterator openForRead ( FlowProcess < ? extends Config > flowProcess , Input input ) throws IOException { return original . openForRead ( flowProcess , input ) ; } @ Override public TupleEntryIterator openForRead ( FlowProcess < ? extends Config > flowProcess ) throws IOException { return original . openForRead ( flowProcess ) ; } @ Override public TupleEntryCollector openForWrite ( FlowProcess < ? extends Config > flowProcess , Output output ) throws IOException { return original . openForWrite ( flowProcess , output ) ; } @ Override public TupleEntryCollector openForWrite ( FlowProcess < ? extends Config > flowProcess ) throws IOException { return original . openForWrite ( flowProcess ) ; } @ Override public Scope outgoingScopeFor ( Set < Scope > incomingScopes ) { return original . outgoingScopeFor ( incomingScopes ) ; } @ Override public Fields retrieveSourceFields ( FlowProcess < ? extends Config > flowProcess ) { return original . retrieveSourceFields ( flowProcess ) ; } @ Override public void presentSourceFields ( FlowProcess < ? extends Config > flowProcess , Fields fields ) { original . presentSourceFields ( flowProcess , fields ) ; } @ Override public Fields retrieveSinkFields ( FlowProcess < ? extends Config > flowProcess ) { return original . retrieveSinkFields ( flowProcess ) ; } @ Override public void presentSinkFields ( FlowProcess < ? extends Config > flowProcess , Fields fields ) { original . presentSinkFields ( flowProcess , fields ) ; } @ Override public Fields resolveIncomingOperationArgumentFields ( Scope incomingScope ) { return original . resolveIncomingOperationArgumentFields ( incomingScope ) ; } @ Override public Fields resolveIncomingOperationPassThroughFields ( Scope incomingScope ) { return original . resolveIncomingOperationPassThroughFields ( incomingScope ) ; } @ Override public String getFullIdentifier ( FlowProcess < ? extends Config > flowProcess ) { return original . getFullIdentifier ( flowProcess ) ; } @ Override public String getFullIdentifier ( Config conf ) { return original . getFullIdentifier ( conf ) ; } @ Override public boolean createResource ( FlowProcess < ? extends Config > flowProcess ) throws IOException { return original . createResource ( flowProcess ) ; } @ Override public boolean createResource ( Config conf ) throws IOException { return original . createResource ( conf ) ; } @ Override public boolean deleteResource ( FlowProcess < ? extends Config > flowProcess ) throws IOException { return original . deleteResource ( flowProcess ) ; } @ Override public boolean deleteResource ( Config conf ) throws IOException { return original . deleteResource ( conf ) ; } @ Override public boolean prepareResourceForRead ( Config conf ) throws IOException { return original . prepareResourceForRead ( conf ) ; } @ Override public boolean prepareResourceForWrite ( Config conf ) throws IOException { return original . prepareResourceForWrite ( conf ) ; } @ Override public boolean commitResource ( Config conf ) throws IOException { return original . commitResource ( conf ) ; } @ Override public boolean rollbackResource ( Config conf ) throws IOException { return original . rollbackResource ( conf ) ; } @ Override public boolean resourceExists ( FlowProcess < ? extends Config > flowProcess ) throws IOException { return original . resourceExists ( flowProcess ) ; } @ Override public boolean resourceExists ( Config conf ) throws IOException { return original . resourceExists ( conf ) ; } @ Override public long getModifiedTime ( FlowProcess < ? extends Config > flowProcess ) throws IOException { return original . getModifiedTime ( flowProcess ) ; } @ Override public long getModifiedTime ( Config conf ) throws IOException { return original . getModifiedTime ( conf ) ; } @ Override public SinkMode getSinkMode ( ) { return original . getSinkMode ( ) ; } @ Override public boolean isKeep ( ) { return original . isKeep ( ) ; } @ Override public boolean isReplace ( ) { return original . isReplace ( ) ; } @ Override public boolean isUpdate ( ) { return original . isUpdate ( ) ; } @ Override public boolean isSink ( ) { return original . isSink ( ) ; } @ Override public boolean isSource ( ) { return original . isSource ( ) ; } @ Override public boolean isTemporary ( ) { return original . isTemporary ( ) ; } @ Override public ConfigDef getConfigDef ( ) { return original . getConfigDef ( ) ; } @ Override public boolean hasConfigDef ( ) { return original . hasConfigDef ( ) ; } @ Override public ConfigDef getNodeConfigDef ( ) { return original . getNodeConfigDef ( ) ; } @ Override public boolean hasNodeConfigDef ( ) { return original . hasNodeConfigDef ( ) ; } @ Override public ConfigDef getStepConfigDef ( ) { return original . getStepConfigDef ( ) ; } @ Override public boolean hasStepConfigDef ( ) { return original . hasStepConfigDef ( ) ; } @ Override public String toString ( ) { return getClass ( ) . getSimpleName ( ) + " < " + original . toString ( ) + " > " ; } }